name: Deploy to App Runner - Image based # Name of the workflow
on:
  push:
    # branches: [ main ] # Trigger workflow on git push to main branch
    # check if there is a new tag
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

  workflow_dispatch: # Allow manual invocation of the workflow
jobs:  
  deploy:
    runs-on: ubuntu-latest
    
    steps:      
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Configure AWS credentials
        id: aws-credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}     

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1        

      # run backend tests
      - name: Run backend tests
        run: |
          docker build --target base-backend -t sd_backend_img ./backend
          docker build --target test-backend -t sd_backend_test_img ./backend
          docker run sd_backend_test_img
          


      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: nodejs
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "ECR_REGISTRY $ECR_REGISTRY"
          echo "IMAGE_TAG $IMAGE_TAG"
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./frontend
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"  
          
      # - name: Deploy to App Runner
      #   id: deploy-apprunner
      #   uses: awslabs/amazon-app-runner-deploy@main        
      #   with:
      #     service: app-runner-image-deploy-service
      #     image: ${{ steps.build-image.outputs.image }}          
      #     access-role-arn: ${{ secrets.ROLE_ARN }}
      #     runtime: NODEJS_12          
      #     region: ${{ secrets.AWS_REGION }}
      #     cpu : 1
      #     memory : 2
      #     port: 8080
      #     wait-for-service-stability: true
      
      # - name: App Runner output
      #   run: echo "App runner output service-id ${{ steps.deploy-apprunner.outputs.service-id }}" 
